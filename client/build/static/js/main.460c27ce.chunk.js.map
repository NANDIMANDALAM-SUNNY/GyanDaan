{"version":3,"sources":["components/ChannelContainer.jsx","assets/study1.png","assets/newlogout.png","assets/videocall.png","components/ChannelListContainer.jsx","assets/AddChannel.js","assets/ChannelInfo.js","assets/CloseCreateChannel.js","assets/InviteIcon.js","assets/SearchIcon.js","components/ChannelSearch.jsx","components/TeamChannelList.jsx","components/TeamChannelPreview.jsx","assets/signup.jpg","components/Auth.jsx","components/ChannelInner.jsx","components/CreateChannel.jsx","components/EditChannel.jsx","components/UserList.jsx","components/ResultsDropdown.jsx","App.jsx","index.js"],"names":["ChannelContainer","isCreating","setIsCreating","isEditing","setIsEditing","createType","className","Channel","EmptyStateIndicator","Message","messageProps","i","MessageTeam","cookies","Cookies","SideBar","logout","src","HospitalIcon","alt","width","style","borderRadius","href","target","VideoCall","onClick","LogoutIcon","CompanyHeader","customChannelTeamFilter","channels","filter","channel","type","customChannelMessagingFilter","ChannelListContent","setCreateType","setToggleContainer","filters","members","$in","useChatContext","client","userID","remove","window","location","reload","ChannelList","channelRenderFilterFn","List","listProps","Preview","previewProps","ChannelListContainer","useState","toggleContainer","left","backgroundColor","prevToggleContainer","AddChannel","height","viewBox","fill","xmlns","prevState","d","fillOpacity","ChannelInfo","CloseCreateChannel","InviteIcon","marginLeft","SearchIcon","fillRule","clipRule","ChannelSearch","setActiveChannel","query","setQuery","loading","setLoading","teamChannels","setTeamChannels","directChannels","setDirectChannels","useEffect","getChannels","text","a","channelResponse","queryChannels","name","$autocomplete","userResponse","queryUsers","id","$ne","Promise","all","users","length","placeholder","value","onChange","event","preventDefault","setChannel","TeamChannelList","children","error","TeamChannelPreview","activeChannel","ChannelPreview","data","DirectPreview","Object","values","state","user","console","log","Avatar","image","fullName","size","initialState","username","password","confirmPassword","phoneNumber","avatarURL","Auth","form","setForm","isSignup","setIsSignup","handleChange","e","handleSubmit","axios","post","token","userId","hashedPassword","set","onSubmit","htmlFor","required","prevIsSignup","signinImage","GiphyContext","React","createContext","TeamChannelHeader","watchers","useChannelStateContext","watcher_count","MessagingHeader","additionalMembers","map","display","ChannelInner","giphyState","setGiphyState","sendMessage","useChannelActionContext","Provider","Window","MessageList","MessageInput","overrideSubmitHandler","message","updatedMessage","attachments","mentioned_users","parent_id","parent","Thread","ChannelNameInput","channelName","setChannelName","CreateChannel","selectedUsers","setSelectedUsers","createChannel","newChannel","watch","EditChannel","updateChannel","update","addMembers","ListContainer","UserItem","selected","setSelected","prevUsers","prevUser","prevSelected","UserList","setUsers","listEmpty","setListEmpty","setError","getUsers","limit","response","index","channelByUser","member_count","$eq","existingChannel","SearchResult","focusedId","undefined","ResultsDropdown","authToken","get","StreamChat","getInstance","connectUser","App","Chat","theme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.460c27ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Channel, MessageTeam } from 'stream-chat-react';\r\n\r\nimport { ChannelInner, CreateChannel, EditChannel } from './';\r\n\r\nconst ChannelContainer = ({ isCreating, setIsCreating, isEditing, setIsEditing, createType }) => {\r\n    if(isCreating) {\r\n        return (\r\n            <div className=\"channel__container\">\r\n                <CreateChannel createType={createType} setIsCreating={setIsCreating} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(isEditing) {\r\n        return (\r\n            <div className=\"channel__container\">\r\n                <EditChannel setIsEditing={setIsEditing} />\r\n            </div> \r\n        )\r\n    }\r\n\r\n    const EmptyState = () => (\r\n        <div className=\"channel-empty__container\">\r\n            <p className=\"channel-empty__first\">This is the beginning of your chat history.</p>\r\n            <p className=\"channel-empty__second\">Send messages, attachments, links, emojis, and more!</p>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\" channel__container\">\r\n            <Channel\r\n                EmptyStateIndicator={EmptyState}\r\n                Message={(messageProps, i) => <MessageTeam key={i} {...messageProps} />}\r\n            >\r\n                <ChannelInner setIsEditing={setIsEditing} />\r\n            </Channel>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChannelContainer;\r\n","export default __webpack_public_path__ + \"static/media/study1.f6ce72b8.png\";","export default __webpack_public_path__ + \"static/media/newlogout.6c92e183.png\";","export default __webpack_public_path__ + \"static/media/videocall.aca69365.png\";","import React, { useState } from 'react';\r\nimport { ChannelList, useChatContext } from 'stream-chat-react';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\r\nimport HospitalIcon from '../assets/study1.png'\r\nimport LogoutIcon from '../assets/newlogout.png'\r\nimport VideoCall from '../assets/videocall.png'\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst SideBar = ({ logout }) => (\r\n    <div className=\"channel-list__sidebar\">\r\n        <div className=\"channel-list__sidebar__icon1\">\r\n            <div className=\"icon1__inner\">\r\n                <img src={HospitalIcon} alt=\"Hospital\" width=\"50\" style={{borderRadius:\"50%\"}} />\r\n            </div>\r\n        </div>\r\n        <div className=\"channel-list__sidebar__icon2\">\r\n            <div className=\"icon1__inner\" >\r\n               <a href=\"https://nn-community.netlify.app\" target=\"_blank\"><img src={VideoCall} alt=\"Logout\" width=\"50\" style={{borderRadius:\"50%\"}}/></a> \r\n            </div>\r\n        </div>\r\n        <div className=\"channel-list__sidebar__icon2\">\r\n            <div className=\"icon1__inner\" onClick={logout}>\r\n                <img src={LogoutIcon} alt=\"Logout\" width=\"50\" style={{borderRadius:\"50%\"}} />\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n);\r\n\r\nconst CompanyHeader = () => (\r\n    <div className=\"channel-list__header\">\r\n        <p className=\"channel-list__header__text\">GyanDaan</p>\r\n    </div>\r\n)\r\n\r\nconst customChannelTeamFilter = (channels) => {\r\n    return channels.filter((channel) => channel.type === 'team');\r\n}\r\n\r\nconst customChannelMessagingFilter = (channels) => {\r\n    return channels.filter((channel) => channel.type === 'messaging');\r\n}\r\n\r\nconst ChannelListContent = ({ isCreating, setIsCreating, setCreateType, setIsEditing, setToggleContainer }) => {\r\n    const { client } = useChatContext();\r\n\r\n    const logout = () => {\r\n        cookies.remove(\"token\");\r\n        cookies.remove('userId');\r\n        cookies.remove('username');\r\n        cookies.remove('fullName');\r\n        cookies.remove('avatarURL');\r\n        cookies.remove('hashedPassword');\r\n        cookies.remove('phoneNumber');\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    const filters = { members: { $in: [client.userID] } };\r\n\r\n    return (\r\n        <>\r\n            <SideBar logout={logout} />\r\n            <div className=\"channel-list__list__wrapper\">\r\n                <CompanyHeader />\r\n                <ChannelSearch setToggleContainer={setToggleContainer} />\r\n                <ChannelList \r\n                    filters={filters}\r\n                    channelRenderFilterFn={customChannelTeamFilter}\r\n                    List={(listProps) => (\r\n                        <TeamChannelList \r\n                            {...listProps}\r\n                            type=\"team\"\r\n                            isCreating={isCreating}\r\n                            setIsCreating={setIsCreating}\r\n                            setCreateType={setCreateType} \r\n                            setIsEditing={setIsEditing}\r\n                            setToggleContainer={setToggleContainer}\r\n                        />\r\n                    )}\r\n                    Preview={(previewProps) => (\r\n                        <TeamChannelPreview \r\n                            {...previewProps}\r\n                            setIsCreating={setIsCreating}\r\n                            setIsEditing={setIsEditing}\r\n                            setToggleContainer={setToggleContainer}\r\n                            type=\"team\"\r\n                        />\r\n                    )}\r\n                />\r\n                <ChannelList \r\n                    filters={filters}\r\n                    channelRenderFilterFn={customChannelMessagingFilter}\r\n                    List={(listProps) => (\r\n                        <TeamChannelList \r\n                            {...listProps}\r\n                            type=\"messaging\"\r\n                            isCreating={isCreating}\r\n                            setIsCreating={setIsCreating}\r\n                            setCreateType={setCreateType} \r\n                            setIsEditing={setIsEditing}\r\n                            setToggleContainer={setToggleContainer}\r\n                        />\r\n                    )}\r\n                    Preview={(previewProps) => (\r\n                        <TeamChannelPreview \r\n                            {...previewProps}\r\n                            setIsCreating={setIsCreating}\r\n                            setIsEditing={setIsEditing}\r\n                            setToggleContainer={setToggleContainer}\r\n                            type=\"messaging\"\r\n                        />\r\n                    )}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelListContainer = ({ setCreateType, setIsCreating, setIsEditing }) => {\r\n    const [toggleContainer, setToggleContainer] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"channel-list__container\">\r\n              <ChannelListContent \r\n                setIsCreating={setIsCreating} \r\n                setCreateType={setCreateType} \r\n                setIsEditing={setIsEditing} \r\n              />\r\n            </div>\r\n\r\n            <div className=\"channel-list__container-responsive\"\r\n                style={{ left: toggleContainer ? \"0%\" : \"-89%\", backgroundColor: \"#005fff\"}}\r\n            >\r\n                <div className=\"channel-list__container-toggle\" onClick={() => setToggleContainer((prevToggleContainer) => !prevToggleContainer)}>\r\n                </div>\r\n                <ChannelListContent \r\n                setIsCreating={setIsCreating} \r\n                setCreateType={setCreateType} \r\n                setIsEditing={setIsEditing}\r\n                setToggleContainer={setToggleContainer}\r\n              />\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ChannelListContainer;\r\n","import React from 'react';\n\nexport const AddChannel = ({ setCreateType, setIsCreating, setIsEditing, setToggleContainer, type }) => (\n  <svg\n    width='14'\n    height='14'\n    viewBox='0 0 14 14'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    onClick={() => {\n      setCreateType(type);\n      setIsCreating((prevState) => !prevState);\n      setIsEditing(false);\n      if(setToggleContainer) setToggleContainer((prevState) => !prevState) \n    }}\n  >\n    <path\n      d='M7 0C3.13438 0 0 3.13438 0 7C0 10.8656 3.13438 14 7 14C10.8656 14 14 10.8656 14 7C14 3.13438 10.8656 0 7 0ZM11 7.5H7.5V11H6.5V7.5H3V6.5H6.5V3H7.5V6.5H11V7.5Z'\n      fill='white'\n      fillOpacity='0.66'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const ChannelInfo = () => (\n  <svg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M8.16602 6.49837H9.83269V4.83171H8.16602V6.49837ZM8.99936 15.665C5.32351 15.665 2.33268 12.6743 2.33268 8.99833C2.33268 5.32253 5.32351 2.33171 8.99936 2.33171C12.6752 2.33171 15.666 5.32253 15.666 8.99833C15.666 12.6743 12.6752 15.665 8.99936 15.665ZM8.99936 0.665039C4.39684 0.665039 0.666016 4.39587 0.666016 8.99833C0.666016 13.6009 4.39684 17.3317 8.99936 17.3317C13.6019 17.3317 17.3327 13.6009 17.3327 8.99833C17.3327 4.39587 13.6019 0.665039 8.99936 0.665039ZM8.16602 13.165H9.83269V8.165H8.16602V13.165Z'\n      fill='black'\n      fillOpacity='0.33'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const CloseCreateChannel = ({ setIsCreating, setIsEditing }) => (\n  <svg\n    width='32'\n    height='32'\n    viewBox='0 0 32 32'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    onClick={() => {\n      if (setIsCreating) setIsCreating(false);\n      if (setIsEditing) setIsEditing(false);\n    }}\n  >\n    <path\n      d='M6.10042 6.10051C0.633603 11.5673 0.633603 20.4327 6.10042 25.8995C11.5672 31.3663 20.4326 31.3663 25.8994 25.8995C31.3662 20.4327 31.3662 11.5673 25.8994 6.10051C20.4326 0.633686 11.5672 0.633685 6.10042 6.10051ZM22.3639 11.0503L17.4141 16L22.3639 20.9497L20.9497 22.364L15.9999 17.4142L11.0502 22.364L9.63596 20.9497L14.5857 16L9.63596 11.0503L11.0502 9.63604L15.9999 14.5858L20.9497 9.63604L22.3639 11.0503Z'\n      fill='var(--primary-color)'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const InviteIcon = () => (\n  <div style={{ marginLeft: '2px' }}>\n    <svg width='28' height='28' viewBox='0 0 28 28' fill='none' xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M14 0C6.26875 0 0 6.26875 0 14C0 21.7313 6.26875 28 14 28C21.7313 28 28 21.7313 28 14C28 6.26875 21.7313 0 14 0ZM21.1812 9.31875L12.4875 20.475C12.4187 20.5438 12.3062 20.6938 12.1687 20.6938C12.025 20.6938 11.9313 20.5938 11.85 20.5125C11.7688 20.4313 6.91875 15.7687 6.91875 15.7687L6.825 15.675C6.7875 15.6187 6.75625 15.55 6.75625 15.475C6.75625 15.4 6.7875 15.3312 6.825 15.275C6.85 15.25 6.86875 15.2313 6.89375 15.2C7.375 14.6938 8.35 13.6687 8.4125 13.6062C8.49375 13.525 8.5625 13.4187 8.7125 13.4187C8.86875 13.4187 8.96875 13.55 9.04375 13.625C9.11875 13.7 11.8562 16.3312 11.8562 16.3312L18.8125 7.39375C18.875 7.34375 18.95 7.30625 19.0312 7.30625C19.1125 7.30625 19.1875 7.3375 19.25 7.3875L21.1625 8.89375C21.2125 8.95625 21.2437 9.03125 21.2437 9.1125C21.25 9.19375 21.2188 9.2625 21.1812 9.31875Z'\n        fill='#1D9D67'\n      />\n    </svg>\n  </div>\n);\n","import React from 'react';\n\nexport const SearchIcon = () => (\n  <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'>\n    <path\n      fill='#fff'\n      fillOpacity='0.66'\n      fillRule='evenodd'\n      d='M2.7 6.95a4.25 4.25 0 117.306 2.954 1.001 1.001 0 00-.102.102A4.25 4.25 0 012.7 6.95zm7.906 5.07a6.25 6.25 0 111.414-1.414l2.987 2.987a1 1 0 11-1.414 1.414l-2.987-2.987z'\n      clipRule='evenodd'\n    ></path>\n  </svg>\n);\n","import React, { useState, useEffect } from 'react';\r\nimport { useChatContext } from 'stream-chat-react';\r\n\r\nimport { ResultsDropdown } from './'\r\nimport { SearchIcon } from '../assets';\r\n\r\nconst ChannelSearch = ({ setToggleContainer }) => {\r\n    const { client, setActiveChannel } = useChatContext();\r\n    const [query, setQuery] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [teamChannels, setTeamChannels] = useState([])\r\n    const [directChannels, setDirectChannels] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(!query) {\r\n            setTeamChannels([]);\r\n            setDirectChannels([]);\r\n        }\r\n    }, [query])\r\n\r\n    const getChannels = async (text) => {\r\n        try {\r\n            const channelResponse = client.queryChannels({\r\n                type: 'team', \r\n                name: { $autocomplete: text }, \r\n                members: { $in: [client.userID]}\r\n            });\r\n            const userResponse = client.queryUsers({\r\n                id: { $ne: client.userID },\r\n                name: { $autocomplete: text }\r\n            })\r\n\r\n            const [channels, { users }] = await Promise.all([channelResponse, userResponse]);\r\n\r\n            if(channels.length) setTeamChannels(channels);\r\n            if(users.length) setDirectChannels(users);\r\n        } catch (error) {\r\n            setQuery('')\r\n        }\r\n    }\r\n\r\n    const onSearch = (event) => {\r\n        event.preventDefault();\r\n\r\n        setLoading(true);\r\n        setQuery(event.target.value);\r\n        getChannels(event.target.value)\r\n    }\r\n\r\n    const setChannel = (channel) => {\r\n        setQuery('');\r\n        setActiveChannel(channel);\r\n    }\r\n\r\n    return (\r\n        <div className=\"channel-search__container\">\r\n            <div className=\"channel-search__input__wrapper\">\r\n                <div className=\"channel-serach__input__icon\">\r\n                    <SearchIcon />\r\n                </div>\r\n                <input \r\n                    className=\"channel-search__input__text\" \r\n                    placeholder=\"Search\" \r\n                    type=\"text\" \r\n                    value={query}  \r\n                    onChange={onSearch}\r\n                />\r\n            </div>\r\n            { query && (\r\n                <ResultsDropdown \r\n                    teamChannels={teamChannels}\r\n                    directChannels={directChannels}\r\n                    loading={loading}\r\n                    setChannel={setChannel}\r\n                    setQuery={setQuery}\r\n                    setToggleContainer={setToggleContainer}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelSearch\r\n","import React from 'react';\r\n\r\nimport { AddChannel } from '../assets';\r\n\r\nconst TeamChannelList = ({ setToggleContainer, children, error = false, loading, type, isCreating, setIsCreating, setCreateType, setIsEditing }) => {\r\n    if(error) {\r\n        return type === 'team' ? (\r\n            <div className=\"team-channel-list\">\r\n                <p className=\"team-channel-list__message\">\r\n                    Connection error, please wait a moment and try again.\r\n                </p>\r\n            </div>\r\n        ) : null\r\n    }\r\n\r\n    if(loading) {\r\n        return (\r\n            <div className=\"team-channel-list\">\r\n                <p className=\"team-channel-list__message loading\">\r\n                    {type === 'team' ? 'Channels' : 'Messages'} loading...\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"team-channel-list\">\r\n            <div className=\"team-channel-list__header\">\r\n                <p className=\"team-channel-list__header__title\">\r\n                    {type === 'team' ? 'Channels' : 'Direct Messages'}\r\n                </p>\r\n                <AddChannel \r\n                    isCreating={isCreating}\r\n                    setIsCreating={setIsCreating}\r\n                    setCreateType={setCreateType} \r\n                    setIsEditing={setIsEditing}\r\n                    type={type === 'team' ? 'team' : 'messaging'}\r\n                    setToggleContainer={setToggleContainer}\r\n                />\r\n            </div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamChannelList\r\n","import React from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\n\r\nconst TeamChannelPreview = ({ setActiveChannel, setIsCreating, setIsEditing, setToggleContainer, channel, type }) => {\r\n    const { channel: activeChannel, client } = useChatContext();\r\n\r\n    const ChannelPreview = () => (\r\n        <p className=\"channel-preview__item\">\r\n            # {channel?.data?.name || channel?.data?.id}\r\n        </p>\r\n    );\r\n\r\n\r\n    const DirectPreview = () => {\r\n        const members = Object.values(channel.state.members).filter(({ user }) => user.id !== client.userID);\r\n    \r\n        console.log(members[0]);\r\n\r\n        return (\r\n            <div className=\"channel-preview__item single\">\r\n                <Avatar \r\n                    image={members[0]?.user?.image}\r\n                    name={members[0]?.user?.fullName || members[0]?.user?.id}\r\n                    size={24}\r\n                />\r\n                <p>{members[0]?.user?.fullName || members[0]?.user?.id}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={\r\n            channel?.id === activeChannel?.id\r\n                ? 'channel-preview__wrapper__selected'\r\n                : 'channel-preview__wrapper'\r\n        }\r\n        onClick={() => {\r\n            setIsCreating(false);\r\n            setIsEditing(false);\r\n            setActiveChannel(channel);\r\n            if(setToggleContainer) {\r\n                setToggleContainer((prevState) => !prevState)\r\n            }\r\n        }}\r\n        >\r\n            {type === 'team' ? <ChannelPreview /> : <DirectPreview />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeamChannelPreview\r\n","export default __webpack_public_path__ + \"static/media/signup.89f8f143.jpg\";","import React,{useState} from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from 'axios';\r\n\r\nimport signinImage from '../assets/signup.jpg';\r\nconst cookies = new Cookies();\r\n\r\nconst initialState={\r\n    fullName:'',\r\n    username:'',\r\n    password:'',\r\n    confirmPassword:'',\r\n    phoneNumber:'',\r\n    avatarURL:'',\r\n}\r\n\r\nconst Auth = () => {\r\n    const [form,setForm] = useState(initialState);\r\n    const [isSignup, setIsSignup] = useState(true);\r\n    const handleChange=(e)=>{\r\n        setForm({...form,[e.target.name]:e.target.value});\r\n        \r\n    }\r\n    const handleSubmit=async (e)=>{\r\n        e.preventDefault();\r\n        const {fullName,username,password,confirmPassword,phoneNumber,avatarURL}=form;\r\n\r\n        const URL = 'https://gyandaan1.herokuapp.com/auth';\r\n        const {data:{token,userId,hashedPassword}} = await axios.post(`${URL}/${isSignup?`signup`:`login`}`,{\r\n            username,password, fullName:form.fullName,phoneNumber,avatarURL,\r\n        });\r\n        cookies.set('token', token);\r\n        cookies.set('username', username);\r\n        cookies.set('fullName', fullName);\r\n        cookies.set('userId', userId);\r\n        if(isSignup) {\r\n            cookies.set('phoneNumber', phoneNumber);\r\n            cookies.set('avatarURL', avatarURL);\r\n            cookies.set('hashedPassword', hashedPassword);\r\n        }\r\n\r\n        window.location.reload();\r\n\r\n    }\r\n    const switchMode =()=>{\r\n        setIsSignup((prevIsSignup)=>!prevIsSignup);\r\n    }\r\n    return (\r\n        <div className='auth__form-container'>\r\n            <div className=\"auth__form-container_fields\">\r\n                <div className=\"auth__form-container_fields-content\">\r\n                    <p>{isSignup?'Sign up':'Sign in'}</p>\r\n                    <form onSubmit={handleSubmit}>\r\n                        {isSignup &&(\r\n                            <div className=\"auth__form-container_fields-content_input\">\r\n                                <label htmlFor=\"fullName\">Full Name</label>\r\n                                <input\r\n                                    name=\"fullName\" type=\"text\"\r\n                                    placeholder=\"Full Name\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        <div className=\"auth__form-container_fields-content_input\">\r\n                                <label htmlFor=\"username\">Username</label>\r\n                                <input\r\n                                    name=\"username\" \r\n                                    type=\"text\"\r\n                                    placeholder=\"Username\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            {isSignup &&(\r\n                            <div className=\"auth__form-container_fields-content_input\">\r\n                                <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n                                <input\r\n                                    name=\"phoneNumber\" type=\"text\"\r\n                                    placeholder=\"Phone Number\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        )}\r\n\r\n                        {isSignup &&(\r\n                            <div className=\"auth__form-container_fields-content_input\">\r\n                                <label htmlFor=\"avatarURL\">Avatar URL</label>\r\n                                <input\r\n                                    name=\"avatarURL\" type=\"text\"\r\n                                    placeholder=\"Avatar URL\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"auth__form-container_fields-content_input\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    name=\"password\" type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            {isSignup &&(\r\n                            <div className=\"auth__form-container_fields-content_input\">\r\n                                <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                                <input\r\n                                    name=\"confirmPassword\" type=\"password\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            )}\r\n\r\n                        <div className=\"auth__form-container_fields-content_button\">\r\n                            <button>{isSignup?\"Sign Up\":\"Sign in \"}</button>\r\n                        </div>            \r\n                    </form>\r\n                        <div className=\"auth__form-container_fields-account\">\r\n                            <p>\r\n                                {isSignup?\"Already have an account ?\" :\"Dont have an account?\"}\r\n                                <span onClick={switchMode}>\r\n                                {isSignup?\"Sign in \":\"sign up\"}\r\n\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"auth__form-container_image\">\r\n                <img src={signinImage} alt='signin '/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","import React, { useState } from 'react';\r\nimport { MessageList, MessageInput, Thread, Window, useChannelActionContext, Avatar, useChannelStateContext, useChatContext } from 'stream-chat-react';\r\n\r\nimport { ChannelInfo } from '../assets';\r\n\r\nexport const GiphyContext = React.createContext({});\r\n\r\nconst ChannelInner = ({ setIsEditing }) => {\r\n  const [giphyState, setGiphyState] = useState(false);\r\n  const { sendMessage } = useChannelActionContext();\r\n  \r\n  const overrideSubmitHandler = (message) => {\r\n    let updatedMessage = {\r\n      attachments: message.attachments,\r\n      mentioned_users: message.mentioned_users,\r\n      parent_id: message.parent?.id,\r\n      parent: message.parent,\r\n      text: message.text,\r\n    };\r\n    \r\n    if (giphyState) {\r\n      updatedMessage = { ...updatedMessage, text: `/giphy ${message.text}` };\r\n    }\r\n    \r\n    if (sendMessage) {\r\n      sendMessage(updatedMessage);\r\n      setGiphyState(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GiphyContext.Provider value={{ giphyState, setGiphyState }}>\r\n      <div style={{ display: 'flex', width: '100%' }}>\r\n        <Window>\r\n          <TeamChannelHeader setIsEditing={setIsEditing} />\r\n          <MessageList />\r\n          <MessageInput overrideSubmitHandler={overrideSubmitHandler} />\r\n        </Window>\r\n        <Thread />\r\n      </div>\r\n    </GiphyContext.Provider>\r\n  );\r\n};\r\n\r\nconst TeamChannelHeader = ({ setIsEditing }) => {\r\n    const { channel, watcher_count } = useChannelStateContext();\r\n    const { client } = useChatContext();\r\n  \r\n    const MessagingHeader = () => {\r\n      const members = Object.values(channel.state.members).filter(({ user }) => user.id !== client.userID);\r\n      const additionalMembers = members.length - 3;\r\n  \r\n      if(channel.type === 'messaging') {\r\n        return (\r\n          <div className='team-channel-header__name-wrapper'>\r\n            {members.map(({ user }, i) => (\r\n              <div key={i} className='team-channel-header__name-multi'>\r\n                <Avatar image={user.image} name={user.fullName || user.id} size={32} />\r\n                <p className='team-channel-header__name user'>{user.fullName || user.id}</p>\r\n              </div>\r\n            ))}\r\n  \r\n            {additionalMembers > 0 && <p className='team-channel-header__name user'>and {additionalMembers} more</p>}\r\n          </div>\r\n        );\r\n      }\r\n  \r\n      return (\r\n        <div className='team-channel-header__channel-wrapper'>\r\n          <p className='team-channel-header__name'># {channel.data.name}</p>\r\n          <span style={{ display: 'flex' }} onClick={() => setIsEditing(true)}>\r\n            <ChannelInfo />\r\n          </span>\r\n        </div>\r\n      );\r\n    };\r\n  \r\n    const getWatcherText = (watchers) => {\r\n      if (!watchers) return 'No users online';\r\n      if (watchers === 1) return '1 user online';\r\n      return `${watchers} users online`;\r\n    };\r\n  \r\n    return (\r\n      <div className='team-channel-header__container'>\r\n        <MessagingHeader />\r\n        <div className='team-channel-header__right'>\r\n          <p className='team-channel-header__right-text'>{getWatcherText(watcher_count)}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default ChannelInner;\r\n","import React, { useState } from 'react';\r\nimport { useChatContext } from 'stream-chat-react';\r\n\r\nimport { UserList } from './';\r\nimport { CloseCreateChannel } from '../assets';\r\n\r\nconst ChannelNameInput = ({ channelName = '', setChannelName }) => {\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        setChannelName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"channel-name-input__wrapper\">\r\n            <p>Name</p>\r\n            <input value={channelName} onChange={handleChange} placeholder=\"channel-name\" />\r\n            <p>Add Members</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CreateChannel = ({ createType, setIsCreating }) => {\r\n    const { client, setActiveChannel } = useChatContext();\r\n    const [selectedUsers, setSelectedUsers] = useState([client.userID || ''])\r\n    const [channelName, setChannelName] = useState('');\r\n\r\n    const createChannel = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const newChannel = await client.channel(createType, channelName, {\r\n                name: channelName, members: selectedUsers\r\n            });\r\n\r\n            await newChannel.watch();\r\n\r\n            setChannelName('');\r\n            setIsCreating(false);\r\n            setSelectedUsers([client.userID]);\r\n            setActiveChannel(newChannel);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-channel__container\">\r\n            <div className=\"create-channel__header\">\r\n                <p>{createType === 'team' ? 'Create a New Channel' : 'Send a Direct Message'}</p>\r\n                <CloseCreateChannel setIsCreating={setIsCreating} />\r\n            </div>\r\n            {createType === 'team' && <ChannelNameInput channelName={channelName} setChannelName={setChannelName}/>}\r\n            <UserList setSelectedUsers={setSelectedUsers} />\r\n            <div className=\"create-channel__button-wrapper\" onClick={createChannel}>\r\n                <p>{createType === 'team' ? 'Create Channel' : 'Create Message Group'}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateChannel\r\n","import React, { useState } from 'react';\r\nimport { useChatContext } from 'stream-chat-react';\r\n\r\nimport { UserList } from './';\r\nimport { CloseCreateChannel } from '../assets';\r\n\r\nconst ChannelNameInput = ({ channelName = '', setChannelName }) => {\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        setChannelName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"channel-name-input__wrapper\">\r\n            <p>Name</p>\r\n            <input value={channelName} onChange={handleChange} placeholder=\"channel-name\" />\r\n            <p>Add Members</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst EditChannel = ({ setIsEditing }) => {\r\n    const { channel } = useChatContext();\r\n    const [channelName, setChannelName] = useState(channel?.data?.name);\r\n    const [selectedUsers, setSelectedUsers] = useState([])\r\n\r\n    const updateChannel = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const nameChanged = channelName !== (channel.data.name || channel.data.id);\r\n\r\n        if(nameChanged) {\r\n            await channel.update({ name: channelName }, { text: `Channel name changed to ${channelName}`});\r\n        }\r\n\r\n        if(selectedUsers.length) {\r\n            await channel.addMembers(selectedUsers);\r\n        }\r\n\r\n        setChannelName(null);\r\n        setIsEditing(false);\r\n        setSelectedUsers([]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit-channel__container\">\r\n            <div className=\"edit-channel__header\">\r\n                <p>Edit Channel</p>\r\n                <CloseCreateChannel setIsEditing={setIsEditing} />\r\n            </div>\r\n            <ChannelNameInput channelName={channelName} setChannelName={setChannelName} />\r\n            <UserList setSelectedUsers={setSelectedUsers} />\r\n            <div className=\"edit-channel__button-wrapper\" onClick={updateChannel}>\r\n                <p>Save Changes</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditChannel\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\n\r\nimport { InviteIcon } from '../assets';\r\n\r\nconst ListContainer = ({ children }) => {\r\n    return (\r\n        <div className=\"user-list__container\">\r\n            <div className=\"user-list__header\">\r\n                <p>User</p>\r\n                <p>Invite</p>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UserItem = ({ user, setSelectedUsers }) => {\r\n    const [selected, setSelected] = useState(false)\r\n\r\n    const handleSelect = () => {\r\n        if(selected) {\r\n            setSelectedUsers((prevUsers) => prevUsers.filter((prevUser) => prevUser !== user.id))\r\n        } else {\r\n            setSelectedUsers((prevUsers) => [...prevUsers, user.id])\r\n        }\r\n\r\n        setSelected((prevSelected) => !prevSelected)\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-item__wrapper\" onClick={handleSelect}>\r\n            <div className=\"user-item__name-wrapper\">\r\n                <Avatar image={user.image} name={user.fullName || user.id} size={32} />\r\n                <p className=\"user-item__name\">{user.fullName || user.id}</p>\r\n            </div>\r\n            {selected ? <InviteIcon /> : <div className=\"user-item__invite-empty\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst UserList = ({ setSelectedUsers }) => {\r\n    const { client } = useChatContext();\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [listEmpty, setListEmpty] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () => {\r\n            if(loading) return;\r\n\r\n            setLoading(true);\r\n            \r\n            try {\r\n                const response = await client.queryUsers(\r\n                    { id: { $ne: client.userID } },\r\n                    { id: 1 },\r\n                    { limit: 8 } \r\n                );\r\n\r\n                if(response.users.length) {\r\n                    setUsers(response.users);\r\n                } else {\r\n                    setListEmpty(true);\r\n                }\r\n            } catch (error) {\r\n               setError(true);\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        if(client) getUsers()\r\n    }, []);\r\n\r\n    if(error) {\r\n        return (\r\n            <ListContainer>\r\n                <div className=\"user-list__message\">\r\n                    Error loading, please refresh and try again.\r\n                </div>\r\n            </ListContainer>\r\n        )\r\n    }\r\n\r\n    if(listEmpty) {\r\n        return (\r\n            <ListContainer>\r\n                <div className=\"user-list__message\">\r\n                    No users found.\r\n                </div>\r\n            </ListContainer>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ListContainer>\r\n            {loading ? <div className=\"user-list__message\">\r\n                Loading users...\r\n            </div> : (\r\n                users?.map((user, i) => (\r\n                  <UserItem index={i} key={user.id} user={user} setSelectedUsers={setSelectedUsers} />  \r\n                ))\r\n            )}\r\n        </ListContainer>\r\n    )\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\n\r\nconst channelByUser = async ({ client, setActiveChannel, channel, setChannel }) => {\r\n  const filters = {\r\n    type: 'messaging',\r\n    member_count: 2,\r\n    members: { $eq: [client.user.id, client.userID] },\r\n  };\r\n\r\n  const [existingChannel] = await client.queryChannels(filters);\r\n\r\n  if (existingChannel) return setActiveChannel(existingChannel);\r\n\r\n  const newChannel = client.channel('messaging', { members: [channel.id, client.userID] });\r\n  \r\n  setChannel(newChannel)\r\n\r\n  return setActiveChannel(newChannel);\r\n};\r\n\r\nconst SearchResult = ({ channel, focusedId, type, setChannel, setToggleContainer }) => {\r\n  const { client, setActiveChannel } = useChatContext();\r\n\r\n  if (type === 'channel') {\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          setChannel(channel)\r\n          if(setToggleContainer) {\r\n            setToggleContainer((prevState) => !prevState)   \r\n          }\r\n        }}\r\n        className={focusedId === channel.id ? 'channel-search__result-container__focused' : 'channel-search__result-container' }\r\n      >\r\n        <div className='result-hashtag'>#</div>\r\n        <p className='channel-search__result-text'>{channel.data.name}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={async () => {\r\n        channelByUser({ client, setActiveChannel, channel, setChannel })\r\n        if(setToggleContainer) {\r\n            setToggleContainer((prevState) => !prevState)   \r\n        }\r\n      }}\r\n      className={focusedId === channel.id ? 'channel-search__result-container__focused' : 'channel-search__result-container' }\r\n    >\r\n      <div className='channel-search__result-user'>\r\n        <Avatar image={channel.image || undefined} name={channel.name} size={24} />\r\n        <p className='channel-search__result-text'>{channel.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ResultsDropdown = ({ teamChannels, directChannels, focusedId, loading, setChannel, setToggleContainer }) => {\r\n\r\n  return (\r\n    <div className='channel-search__results'>\r\n      <p className='channel-search__results-header'>Channels</p>\r\n      {loading && !teamChannels.length && (\r\n        <p className='channel-search__results-header'>\r\n          <i>Loading...</i>\r\n        </p>\r\n      )}\r\n      {!loading && !teamChannels.length ? (\r\n        <p className='channel-search__results-header'>\r\n          <i>No channels found</i>\r\n        </p>\r\n      ) : (\r\n        teamChannels?.map((channel, i) => (\r\n          <SearchResult\r\n            channel={channel}\r\n            focusedId={focusedId}\r\n            key={i}\r\n            setChannel={setChannel}\r\n            type='channel'\r\n            setToggleContainer={setToggleContainer}\r\n          />\r\n        ))\r\n      )}\r\n      <p className='channel-search__results-header'>Users</p>\r\n      {loading && !directChannels.length && (\r\n        <p className='channel-search__results-header'>\r\n          <i>Loading...</i>\r\n        </p>\r\n      )}\r\n      {!loading && !directChannels.length ? (\r\n        <p className='channel-search__res ults-header'>\r\n          <i>No direct messages found</i>\r\n        </p>\r\n      ) : (\r\n        directChannels?.map((channel, i) => (\r\n          <SearchResult\r\n            channel={channel}\r\n            focusedId={focusedId}\r\n            key={i}\r\n            setChannel={setChannel}\r\n            type='user'\r\n            setToggleContainer={setToggleContainer}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultsDropdown;","import React,{useState} from 'react'\r\nimport {StreamChat} from 'stream-chat';\r\nimport {Chat} from 'stream-chat-react';\r\nimport Cookies from 'universal-cookie';\r\n// import ChannelContainer from './components/ChannelContainer';\r\n// import ChannelListContainer from './components/ChannelListContainer';\r\nimport {ChannelContainer,ChannelListContainer,Auth} from './components';\r\nimport 'stream-chat-react/dist/css/index.css';\r\nimport './App.css';\r\n\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst apikey='7tfneegzbh4v';\r\nconst authToken = cookies.get(\"token\");\r\nconst client = StreamChat.getInstance(apikey);\r\n\r\nif(authToken) {\r\n    client.connectUser({\r\n        id: cookies.get('userId'),\r\n        name: cookies.get('username'),\r\n        fullName: cookies.get('fullName'),\r\n        image: cookies.get('avatarURL'),\r\n        hashedPassword: cookies.get('hashedPassword'),\r\n        phoneNumber: cookies.get('phoneNumber'),\r\n    }, authToken)\r\n}\r\n\r\n\r\nconst App = () => {\r\n    const [createType, setCreateType] = useState('');\r\n    const [isCreating, setIsCreating] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    if(!authToken) return <Auth />\r\n\r\n    return (\r\n        <div className=\"app__wrapper\">\r\n            <Chat client={client} theme=\"team light\" >\r\n                <ChannelListContainer isCreating={isCreating}\r\n                    setIsCreating={setIsCreating}\r\n                    setCreateType={setCreateType}\r\n                    setIsEditing={setIsEditing}\r\n                 />\r\n                <ChannelContainer \r\n                    isCreating={isCreating}\r\n                    setIsCreating={setIsCreating}\r\n                    setCreateType={setCreateType}\r\n                    setIsEditing={setIsEditing}\r\n                    createType={createType}\r\n                />\r\n            </Chat>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}